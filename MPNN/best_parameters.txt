model = CustomMPNNModel(n_tasks = n_tasks,
                            batch_size=128,
                            learning_rate=0.001,
                            class_imbalance_ratio = train_ratios,
                            node_out_feats = 100,
                            edge_hidden_feats = 75,
                            edge_out_feats = 100,
                            num_step_message_passing = 5,
                            mpnn_residual = True,
                            message_aggregator_type = 'sum',
                            mode = 'classification',
                            number_atom_features = GraphConvConstants.ATOM_FDIM,
                            number_bond_features = GraphConvConstants.BOND_FDIM,
                            n_classes = 1,
                            readout_type = 'set2set',
                            num_step_set2set = 3,
                            num_layer_set2set = 2,
                            ffn_hidden_list= [392, 392],
                            ffn_embeddings = 256,
                            ffn_activation = 'relu',
                            ffn_dropout_p = 0.12,
                            ffn_dropout_at_input_no_act = False,
                            weight_decay = 1e-5,
                            self_loop = False,
                            optimizer_name = 'adam',
                            log_frequency = 32,
                            model_dir = './models')

{
    "trial_1": {
        "batch_size": 128,
        "node_out_feats": 100,
        "edge_hidden_feats": 75,
        "edge_out_feats": 100,
        "num_step_message_passing": 5,
        "mpnn_residual" : True,
        "message_aggregator_type" : 'sum',
        "readout_type" : 'set2set',
        "num_step_set2set" : 3,
        "num_layer_set2set" : 2,
        "ffn_hidden_list": [
            392,
            392
        ],
        "ffn_activation": "relu",
        "ffn_dropout_p": 0.12,
        "weight_decay": 1e-5,
        "learning_rate": 0.001,
    }
}